// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package database

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (
    email, 
    password, 
    role
) VALUES (
    $1,
    $2,
    $3
)
`

type CreateUserParams struct {
	Email    string
	Password string
	Role     string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser, arg.Email, arg.Password, arg.Role)
	return err
}

const getUserByEmailAndPassword = `-- name: GetUserByEmailAndPassword :one
SELECT id, email, password, role FROM users WHERE email = $1 AND password = $2
`

type GetUserByEmailAndPasswordParams struct {
	Email    string
	Password string
}

func (q *Queries) GetUserByEmailAndPassword(ctx context.Context, arg GetUserByEmailAndPasswordParams) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByEmailAndPassword, arg.Email, arg.Password)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Password,
		&i.Role,
	)
	return i, err
}
